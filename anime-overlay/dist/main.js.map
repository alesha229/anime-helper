{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import { app, BrowserWindow, ipcMain, screen } from \"electron\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport * as os from \"os\";\n\nlet mainWindow: BrowserWindow | null = null;\nlet initialBounds: Electron.Rectangle | null = null;\n\nfunction createWindow() {\n  const primary = screen.getPrimaryDisplay();\n  const area = (primary && (primary as any).workArea) ||\n    (primary as any).bounds || { width: 1920, height: 1080, x: 0, y: 0 };\n  const winW = 360;\n  const winH = 640;\n  const x = (area as any).x + (area as any).width - winW;\n  const y = (area as any).y + (area as any).height - winH;\n\n  mainWindow = new BrowserWindow({\n    width: winW,\n    height: winH,\n    transparent: true,\n    frame: false,\n    alwaysOnTop: true,\n    resizable: true,\n    hasShadow: false,\n    skipTaskbar: true,\n    x,\n    y,\n    webPreferences: {\n      preload: path.join(__dirname, \"preload.js\"),\n      contextIsolation: true,\n      nodeIntegration: false,\n    },\n  });\n\n  initialBounds = mainWindow.getBounds();\n\n  mainWindow.loadFile(path.join(__dirname, \"../public/index.html\"));\n  mainWindow.setIgnoreMouseEvents(false);\n\n  // watch for events.json written by the VS Code extension\n  try {\n    const candidates = [\n      path.join(__dirname, \"../public/events.json\"),\n      path.join(__dirname, \"../events.json\"),\n    ];\n    for (const eventsFile of candidates) {\n      if (!fs.existsSync(eventsFile)) continue;\n      const emitFromFile = () => {\n        try {\n          const txt = fs.readFileSync(eventsFile, \"utf8\");\n          const obj = JSON.parse(txt);\n          if (obj && obj.type === \"shutdown\") {\n            try {\n              if (mainWindow && !mainWindow.isDestroyed()) {\n                mainWindow.close();\n              }\n              app.quit();\n            } catch {}\n            return;\n          }\n          if (mainWindow && !mainWindow.isDestroyed())\n            mainWindow.webContents.send(\"overlay-event\", obj);\n        } catch {}\n      };\n      // initial read\n      emitFromFile();\n      // watch for changes\n      fs.watch(eventsFile, { persistent: false }, emitFromFile);\n      break; // bind to first existing\n    }\n  } catch (e) {\n    console.warn(\"Events watcher failed\", e);\n  }\n\n  // IPC handlers\n  ipcMain.handle(\"overlay-toggle-click-through\", (_event, enabled: boolean) => {\n    if (mainWindow) {\n      mainWindow.setIgnoreMouseEvents(!!enabled, { forward: true });\n      return true;\n    }\n    return false;\n  });\n\n  ipcMain.on(\"overlay-close\", () => {\n    if (mainWindow) mainWindow.close();\n  });\n\n  ipcMain.on(\"overlay-set-opacity\", (_event, value: number | string) => {\n    if (mainWindow) mainWindow.setOpacity(Number(value));\n  });\n  ipcMain.on(\"overlay-open-devtools\", () => {\n    if (mainWindow) mainWindow.webContents.openDevTools({ mode: \"right\" });\n  });\n\n  ipcMain.on(\"overlay-enter-fullscreen\", () => {\n    if (!mainWindow) return;\n    try {\n      initialBounds = mainWindow.getBounds();\n    } catch {}\n    const { bounds } = screen.getPrimaryDisplay();\n    mainWindow.setBounds(\n      { x: bounds.x, y: bounds.y, width: bounds.width, height: bounds.height },\n      false\n    );\n  });\n  ipcMain.on(\"overlay-exit-fullscreen\", () => {\n    if (!mainWindow) return;\n    if (initialBounds) mainWindow.setBounds(initialBounds, false);\n  });\n}\n\napp.whenReady().then(() => {\n  createWindow();\n\n  app.on(\"activate\", function () {\n    if (BrowserWindow.getAllWindows().length === 0) createWindow();\n  });\n\n  // Watchdog: if VS Code parent PID is provided and exits, quit overlay\n  try {\n    const ppidStr = process.env.VSCODE_PARENT_PID || \"\";\n    const ppid = Number(ppidStr);\n    if (ppid && Number.isFinite(ppid)) {\n      const interval = setInterval(() => {\n        try {\n          process.kill(ppid, 0);\n          // parent alive\n        } catch {\n          try {\n            clearInterval(interval);\n          } catch {}\n          try {\n            app.quit();\n          } catch {}\n        }\n      }, 1500);\n      app.once(\"before-quit\", () => {\n        try {\n          clearInterval(interval);\n        } catch {}\n      });\n    }\n  } catch {}\n});\n\napp.on(\"window-all-closed\", function () {\n  if (process.platform !== \"darwin\") app.quit();\n});\n"],
  "mappings": "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",
  "names": []
}
