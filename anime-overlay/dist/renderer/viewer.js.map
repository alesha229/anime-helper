{
  "version": 3,
  "sources": ["../../src/config.ts", "../../src/renderer/live2dLoader.ts", "../../src/renderer/viewer.ts"],
  "sourcesContent": ["export const config = {\r\n  MODELS: [\r\n    \"./models/adaerbote_2/adaerbote_2.model3.json\",\r\n    \"./models/dafeng_6/dafeng_6.model3.json\",\r\n    \"https://raw.githubusercontent.com/Eikanya/Live2d-model/master/%E7%A2%A7%E8%93%9D%E8%88%AA%E7%BA%BF%20Azue%20Lane/Azue%20Lane(JP)/abeikelongbi_3/abeikelongbi_3.model3.json\",\r\n    \"https://cdn.jsdelivr.net/gh/Eikanya/Live2d-model/Live2D/haru/haru_greeter_t03.model3.json\",\r\n  ],\r\n  LAST_MODEL_KEY: \"anime_overlay_last_model_url\",\r\n  GITHUBRAW: \"https://raw.githubusercontent.com\",\r\n};\r\n", "/* eslint-disable */\r\n\r\n// Shared Live2D model loader used by both viewer and index renderers\r\n// This module encapsulates robust runtime detection, settings rewriting,\r\n// CDN fallbacks, and PIXI stage attachment.\r\n\r\ndeclare const PIXI: any;\r\nimport { config } from \"../config\";\r\n\r\nlet __loadedRuntime: \"c2\" | \"c4\" | null = null;\r\nlet __live2d_patches_installed = false;\r\n\r\nasync function loadScript(src: string): Promise<void> {\r\n  await new Promise<void>((res, rej) => {\r\n    const s = document.createElement(\"script\");\r\n    s.src = src;\r\n    s.onload = () => res();\r\n    s.onerror = () => rej(new Error(\"Failed to load \" + src));\r\n    document.head.appendChild(s);\r\n  });\r\n}\r\n\r\nfunction getAlternativeURL(u: string): string {\r\n  try {\r\n    if (u.includes(\"cdn.jsdelivr.net/gh/\")) {\r\n      const m = u.match(\r\n        /cdn\\.jsdelivr\\.net\\/gh\\/([^@/]+)\\/([^@/]+)@[^/]+\\/(.+)$/\r\n      );\r\n      if (m)\r\n        return `https://raw.githubusercontent.com/${m[1]}/${m[2]}/master/${m[3]}`;\r\n    }\r\n    if (u.includes(\"raw.githubusercontent.com/\")) {\r\n      const m = u.match(\r\n        /raw\\.githubusercontent\\.com\\/([^/]+)\\/([^/]+)\\/[^/]+\\/(.+)$/\r\n      );\r\n      if (m)\r\n        return `https://cdn.jsdelivr.net/gh/${m[1]}/${m[2]}@master/${m[3]}`;\r\n    }\r\n  } catch {}\r\n  return u;\r\n}\r\n\r\nasync function loadJson5IfNeeded(): Promise<any | null> {\r\n  try {\r\n    if ((window as any).JSON5) return (window as any).JSON5;\r\n  } catch {}\r\n  try {\r\n    await loadScript(\r\n      \"https://cdn.jsdelivr.net/npm/json5@2.2.3/dist/index.min.js\"\r\n    );\r\n    return (window as any).JSON5 || null;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction installLive2dPatches(ns: any) {\r\n  if (!ns || __live2d_patches_installed) return;\r\n  try {\r\n    const Loader = ns.Live2DLoader;\r\n    const XHR = ns.XHRLoader;\r\n    if (Loader && XHR && Array.isArray(Loader.middlewares)) {\r\n      const idx = Loader.middlewares.indexOf(XHR.loader);\r\n      if (idx >= 0) {\r\n        const orig = XHR.loader;\r\n        Loader.middlewares[idx] = async (context: any, next: any) => {\r\n          const url = context.settings\r\n            ? context.settings.resolveURL(context.url)\r\n            : context.url;\r\n          try {\r\n            await orig(context, next);\r\n            return;\r\n          } catch (e: any) {\r\n            if (\r\n              !(\r\n                e &&\r\n                e.status === 403 &&\r\n                typeof url === \"string\" &&\r\n                url.includes(\"jsdelivr\")\r\n              )\r\n            )\r\n              throw e;\r\n          }\r\n          try {\r\n            context.url = getAlternativeURL(url);\r\n          } catch {}\r\n          await orig(context, next);\r\n          return next();\r\n        };\r\n      }\r\n    }\r\n  } catch {}\r\n  try {\r\n    const Factory = ns.Live2DFactory;\r\n    if (Factory && Array.isArray(Factory.live2DModelMiddlewares)) {\r\n      const idx = Factory.live2DModelMiddlewares.indexOf(Factory.urlToJSON);\r\n      if (idx >= 0) {\r\n        Factory.live2DModelMiddlewares[idx] = async (\r\n          context: any,\r\n          next: any\r\n        ) => {\r\n          if (typeof context.source === \"string\") {\r\n            let url = context.source as string;\r\n            let text: string | null = null;\r\n            try {\r\n              const r1 = await fetch(url);\r\n              text = await r1.text();\r\n            } catch {}\r\n            try {\r\n              if (!text || /^\\s*<!DOCTYPE|<html/i.test(text)) {\r\n                const alt = getAlternativeURL(url);\r\n                if (alt && alt !== url) {\r\n                  const r2 = await fetch(alt);\r\n                  const t2 = await r2.text();\r\n                  if (t2) {\r\n                    text = t2;\r\n                    url = alt;\r\n                  }\r\n                }\r\n              }\r\n            } catch {}\r\n            if (!text) throw new Error(\"Failed to fetch settings JSON\");\r\n            let json: any = null;\r\n            try {\r\n              json = JSON.parse(text);\r\n            } catch {\r\n              try {\r\n                const JSON5 = await loadJson5IfNeeded();\r\n                if (JSON5) json = JSON5.parse(text);\r\n              } catch {}\r\n            }\r\n            if (!json) throw new Error(\"Failed to parse settings JSON\");\r\n            try {\r\n              json.url = url;\r\n            } catch {}\r\n            context.source = json;\r\n            try {\r\n              context.live2dModel?.emit?.(\"settingsJSONLoaded\", json);\r\n            } catch {}\r\n          }\r\n          return next();\r\n        };\r\n      }\r\n    }\r\n  } catch {}\r\n  __live2d_patches_installed = true;\r\n}\r\n\r\nasync function ensureCubism4(): Promise<void> {\r\n  if (!(window as any).Live2DCubismCore) {\r\n    await loadScript(\"./vendor/live2dcubismcore.min.js\");\r\n  }\r\n  if (!(window as any).__live2d_api_c4) {\r\n    await loadScript(\"./vendor/cubism4.min.js\");\r\n    try {\r\n      (window as any).__live2d_api_c4 = (PIXI as any).live2d;\r\n      __loadedRuntime = \"c4\";\r\n      try {\r\n        (window as any).__loadedRuntime = \"c4\";\r\n      } catch {}\r\n    } catch {}\r\n  }\r\n  try {\r\n    installLive2dPatches(\r\n      (window as any).__live2d_api_c4 || (PIXI as any).live2d\r\n    );\r\n  } catch {}\r\n}\r\n\r\nasync function ensureCubism2(): Promise<void> {\r\n  if (!(window as any).Live2D) {\r\n    await loadScript(\"./vendor/live2d.min.js\");\r\n  }\r\n  if (!(window as any).__live2d_api_c2) {\r\n    await loadScript(\"./vendor/cubism2.min.js\");\r\n    try {\r\n      (window as any).__live2d_api_c2 = (PIXI as any).live2d;\r\n      __loadedRuntime = \"c2\";\r\n      try {\r\n        (window as any).__loadedRuntime = \"c2\";\r\n      } catch {}\r\n    } catch {}\r\n  }\r\n  try {\r\n    installLive2dPatches(\r\n      (window as any).__live2d_api_c2 || (PIXI as any).live2d\r\n    );\r\n  } catch {}\r\n}\r\n\r\nexport function detectUseV4FromUrl(u: string | null): boolean | null {\r\n  try {\r\n    if (!u) return null;\r\n    const low = u.toLowerCase();\r\n    if (/(^|\\/)model3\\.json(\\?|$)/.test(low)) return true;\r\n    if (/(^|\\/)model\\.json(\\?|$)/.test(low)) return false;\r\n  } catch {}\r\n  return null;\r\n}\r\n\r\nexport function detectRuntimeByUrl(u: string | null): boolean | null {\r\n  try {\r\n    if (!u) return null;\r\n    const low = u.toLowerCase();\r\n    if (/\\.model3\\.json(\\?|$)/.test(low) || /\\.moc3(\\?|$)/.test(low))\r\n      return true;\r\n    if (/\\.model\\.json(\\?|$)/.test(low) || /\\.moc(\\?|$)/.test(low))\r\n      return false;\r\n    if (/\\.json(\\?|$)/.test(low)) return false;\r\n  } catch {}\r\n  return null;\r\n}\r\n\r\nfunction toAbsoluteAssetUrl(modelJsonUrl: string, assetPath: string) {\r\n  if (!assetPath) return assetPath;\r\n  if (/^https?:/i.test(assetPath) || assetPath.startsWith(\"data:\"))\r\n    return assetPath;\r\n  try {\r\n    const base = modelJsonUrl.replace(/\\/[^/]*$/, \"/\");\r\n    return new URL(assetPath, base).href;\r\n  } catch {\r\n    return assetPath;\r\n  }\r\n}\r\n\r\nfunction rewriteModelJsonUrls(modelJsonUrl: string, j: any) {\r\n  try {\r\n    if (j && j.FileReferences) {\r\n      if (j.FileReferences.Moc)\r\n        j.FileReferences.Moc = toAbsoluteAssetUrl(\r\n          modelJsonUrl,\r\n          j.FileReferences.Moc\r\n        );\r\n      if (Array.isArray(j.FileReferences.Textures))\r\n        j.FileReferences.Textures = j.FileReferences.Textures.map((t: any) =>\r\n          toAbsoluteAssetUrl(modelJsonUrl, t)\r\n        );\r\n      if (j.FileReferences.Physics)\r\n        j.FileReferences.Physics = toAbsoluteAssetUrl(\r\n          modelJsonUrl,\r\n          j.FileReferences.Physics\r\n        );\r\n      if (j.FileReferences.Motions) {\r\n        for (const g of Object.keys(j.FileReferences.Motions)) {\r\n          const arr = j.FileReferences.Motions[g] || [];\r\n          for (const m of arr)\r\n            if (m.File) m.File = toAbsoluteAssetUrl(modelJsonUrl, m.File);\r\n        }\r\n      }\r\n    }\r\n    if (j) {\r\n      if (j.model) j.model = toAbsoluteAssetUrl(modelJsonUrl, j.model);\r\n      if (Array.isArray(j.textures))\r\n        j.textures = j.textures.map((t: any) =>\r\n          toAbsoluteAssetUrl(modelJsonUrl, t)\r\n        );\r\n      if (j.physics) j.physics = toAbsoluteAssetUrl(modelJsonUrl, j.physics);\r\n      if (j.motions) {\r\n        for (const g of Object.keys(j.motions)) {\r\n          const arr = j.motions[g] || [];\r\n          for (let i = 0; i < arr.length; i++) {\r\n            const m = arr[i];\r\n            if (typeof m === \"string\")\r\n              arr[i] = { file: toAbsoluteAssetUrl(modelJsonUrl, m) };\r\n            else {\r\n              if ((m as any).file)\r\n                (m as any).file = toAbsoluteAssetUrl(\r\n                  modelJsonUrl,\r\n                  (m as any).file\r\n                );\r\n              if ((m as any).File)\r\n                (m as any).File = toAbsoluteAssetUrl(\r\n                  modelJsonUrl,\r\n                  (m as any).File\r\n                );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } catch {}\r\n  return j;\r\n}\r\n\r\nasync function loadSettingsJson(\r\n  url: string,\r\n  forceV4?: boolean | null\r\n): Promise<{\r\n  urlOrSettings: any;\r\n  useV4: boolean | null;\r\n  originalUrl: string;\r\n  groups: string[];\r\n}> {\r\n  let useV4 = forceV4 ?? detectUseV4FromUrl(url);\r\n  const byExt = detectRuntimeByUrl(url);\r\n  let groups: string[] = [];\r\n  try {\r\n    const r = await fetch(url, { headers: { Accept: \"application/json\" } });\r\n    const txt = await r.text();\r\n    const j = JSON.parse(txt);\r\n    const cloned = JSON.parse(JSON.stringify(j));\r\n    rewriteModelJsonUrls(url, cloned);\r\n    let isC4 = false;\r\n    try {\r\n      groups = Object.keys(\r\n        j.motions || j.Motions || j.FileReferences?.Motions || {}\r\n      );\r\n    } catch {}\r\n    if (j?.FileReferences?.Moc && /\\.moc3$/i.test(String(j.FileReferences.Moc)))\r\n      isC4 = true;\r\n    if (j?.FileReferences?.Moc && /\\.moc$/i.test(String(j.FileReferences.Moc)))\r\n      isC4 = false;\r\n    if ((j.model || j.textures || j.motions) && !j.FileReferences) isC4 = false;\r\n    if (forceV4 === true) isC4 = true;\r\n    if (forceV4 === false) isC4 = false;\r\n    if (forceV4 == null) {\r\n      if (byExt === true) isC4 = true;\r\n      if (byExt === false) isC4 = false;\r\n    }\r\n    if (isC4) {\r\n      useV4 = true;\r\n      try {\r\n        (cloned as any).url = url;\r\n      } catch {}\r\n      return { urlOrSettings: cloned, useV4, originalUrl: url, groups };\r\n    }\r\n    useV4 = false;\r\n    return { urlOrSettings: url, useV4, originalUrl: url, groups };\r\n  } catch {\r\n    return { urlOrSettings: url, useV4, originalUrl: url, groups };\r\n  }\r\n}\r\n\r\nfunction clearPixiCaches() {\r\n  try {\r\n    const tex = (PIXI.utils && (PIXI.utils as any).TextureCache) || {};\r\n    for (const k of Object.keys(tex)) {\r\n      try {\r\n        tex[k]?.destroy?.(true);\r\n      } catch {}\r\n      delete tex[k];\r\n    }\r\n  } catch {}\r\n  try {\r\n    const btex = (PIXI.utils && (PIXI.utils as any).BaseTextureCache) || {};\r\n    for (const k of Object.keys(btex)) {\r\n      try {\r\n        btex[k]?.destroy?.();\r\n      } catch {}\r\n      delete btex[k];\r\n    }\r\n  } catch {}\r\n}\r\n\r\nexport async function loadModel(\r\n  app: any,\r\n  url: string,\r\n  forceV4?: boolean | null\r\n) {\r\n  const stageDiv = document.getElementById(\"stage\") as HTMLElement | null;\r\n  try {\r\n    await clearPixiCaches();\r\n    if ((window as any).__live2d_model) {\r\n      try {\r\n        app.stage.removeChild((window as any).__live2d_model);\r\n        (window as any).__live2d_model.destroy?.(true);\r\n      } catch {}\r\n    }\r\n    (window as any).__live2d_model = undefined;\r\n  } catch {}\r\n  const { urlOrSettings, useV4, originalUrl, groups } = await loadSettingsJson(\r\n    url,\r\n    forceV4\r\n  );\r\n  try {\r\n    localStorage.setItem(config.LAST_MODEL_KEY, originalUrl);\r\n  } catch {}\r\n  try {\r\n    (window as any).overlayAPI?.saveLastModel?.(originalUrl);\r\n  } catch {}\r\n  try {\r\n    const desired: \"c2\" | \"c4\" | null =\r\n      useV4 === true ? \"c4\" : useV4 === false ? \"c2\" : null;\r\n    if (desired && __loadedRuntime && __loadedRuntime !== desired) {\r\n      (window.location as any).href = `viewer.html`;\r\n      throw new Error(\"Switching runtime requires reload\");\r\n    }\r\n  } catch {}\r\n  if (useV4 === true) await ensureCubism4();\r\n  else if (useV4 === false) await ensureCubism2();\r\n  else await ensureCubism4();\r\n\r\n  let model: any = null;\r\n  const ns = useV4\r\n    ? (window as any).__live2d_api_c4 || (PIXI as any).live2d\r\n    : (window as any).__live2d_api_c2 || (PIXI as any).live2d;\r\n  const prevLive2d = (PIXI as any).live2d;\r\n  (PIXI as any).live2d = ns;\r\n  try {\r\n    model = await (PIXI as any).live2d.Live2DModel.from(urlOrSettings, {\r\n      motionPreload: \"none\",\r\n    });\r\n  } catch {\r\n    try {\r\n      model = await (PIXI as any).live2d.Live2DModel.from(urlOrSettings);\r\n    } catch {\r\n      if (useV4 === false && typeof urlOrSettings === \"string\") {\r\n        try {\r\n          const resp = await fetch(String(urlOrSettings), {\r\n            headers: { Accept: \"application/json\" },\r\n          });\r\n          const txt = await resp.text();\r\n          const j = JSON.parse(txt);\r\n          const cloned = JSON.parse(JSON.stringify(j));\r\n          rewriteModelJsonUrls(String(urlOrSettings), cloned);\r\n          model = await (PIXI as any).live2d.Live2DModel.from(cloned);\r\n        } catch {}\r\n      }\r\n    }\r\n  } finally {\r\n    try {\r\n      (PIXI as any).live2d = prevLive2d;\r\n    } catch {}\r\n  }\r\n  try {\r\n    (stageDiv as any).dataset.modelUrl = originalUrl;\r\n  } catch {}\r\n  try {\r\n    (window as any).__live2d_model = model;\r\n  } catch {}\r\n  try {\r\n    model.anchor && model.anchor.set(0.5, 0.5);\r\n  } catch {}\r\n  app.stage.addChild(model);\r\n\r\n  const fitModel = () => {\r\n    if (!model) return;\r\n    model.x = app.renderer.width / 2;\r\n    model.y = app.renderer.height / 2;\r\n    try {\r\n      const b = model.getBounds();\r\n      const scale = Math.min(\r\n        0.9,\r\n        (app.renderer.width * 0.9) / Math.max(1, b.width),\r\n        (app.renderer.height * 0.9) / Math.max(1, b.height)\r\n      );\r\n      if (isFinite(scale) && scale > 0) model.scale.set(scale);\r\n    } catch {}\r\n  };\r\n  fitModel();\r\n  return { model, groups, fitModel };\r\n}\r\n\r\nexport {};\r\n", "/* eslint-disable */\n\nimport { config } from \"../config\";\nimport {\n  loadModel as sharedLoadModel,\n  detectRuntimeByUrl as sharedDetectRuntimeByUrl,\n} from \"./live2dLoader\";\n\ndeclare const PIXI: any;\n\ndeclare global {\n  interface Window {\n    __live2d_model?: any;\n    overlayAPI: {\n      toggleClickThrough: (enabled: boolean) => Promise<boolean>;\n      close: () => void;\n      setOpacity: (v: number | string) => void;\n      openDevTools: () => void;\n      enterFullscreen: () => void;\n      exitFullscreen: () => void;\n      saveModelState: (\n        url: string,\n        x: number,\n        y: number,\n        scale: number\n      ) => void;\n      getModelState: (\n        url: string\n      ) => Promise<{ x: number; y: number; scale: number } | null>;\n      saveLastModel: (url: string) => void;\n      getLastModel: () => Promise<string | null>;\n      onEvent: (cb: (data: any) => void) => void;\n    };\n  }\n}\n\n// Track which Live2D runtime has been initialized in this page session\nlet __loadedRuntime: \"c2\" | \"c4\" | null = null;\nlet __live2d_patches_installed = false;\n\nasync function loadScript(src: string): Promise<void> {\n  await new Promise<void>((res, rej) => {\n    const s = document.createElement(\"script\");\n    s.src = src;\n    s.onload = () => res();\n    s.onerror = (ev) => rej(new Error(\"Failed to load \" + src));\n    document.head.appendChild(s);\n  });\n}\n\nfunction getAlternativeURL(u: string): string {\n  try {\n    if (u.includes(\"cdn.jsdelivr.net/gh/\")) {\n      // jsDelivr \u2192 raw\n      const m = u.match(\n        /cdn\\.jsdelivr\\.net\\/gh\\/([^@/]+)\\/([^@/]+)@[^/]+\\/(.+)$/\n      );\n      if (m)\n        return `https://raw.githubusercontent.com/${m[1]}/${m[2]}/master/${m[3]}`;\n    }\n    if (u.includes(\"raw.githubusercontent.com/\")) {\n      // raw \u2192 jsDelivr@master\n      const m = u.match(\n        /raw\\.githubusercontent\\.com\\/([^/]+)\\/([^/]+)\\/[^/]+\\/(.+)$/\n      );\n      if (m)\n        return `https://cdn.jsdelivr.net/gh/${m[1]}/${m[2]}@master/${m[3]}`;\n    }\n  } catch {}\n  return u;\n}\n\nasync function loadJson5IfNeeded(): Promise<any | null> {\n  try {\n    if ((window as any).JSON5) return (window as any).JSON5;\n  } catch {}\n  try {\n    await loadScript(\n      \"https://cdn.jsdelivr.net/npm/json5@2.2.3/dist/index.min.js\"\n    );\n    return (window as any).JSON5 || null;\n  } catch {\n    return null;\n  }\n}\n\nfunction installLive2dPatches(ns: any) {\n  if (!ns || __live2d_patches_installed) return;\n  try {\n    const Loader = ns.Live2DLoader;\n    const XHR = ns.XHRLoader;\n    if (Loader && XHR && Array.isArray(Loader.middlewares)) {\n      const idx = Loader.middlewares.indexOf(XHR.loader);\n      if (idx >= 0) {\n        const orig = XHR.loader;\n        Loader.middlewares[idx] = async (context: any, next: any) => {\n          const url = context.settings\n            ? context.settings.resolveURL(context.url)\n            : context.url;\n          try {\n            await orig(context, next);\n            return;\n          } catch (e: any) {\n            if (\n              !(\n                e &&\n                e.status === 403 &&\n                typeof url === \"string\" &&\n                url.includes(\"jsdelivr\")\n              )\n            ) {\n              throw e;\n            }\n            console.warn(\n              \"[viewer] 403 from jsDelivr, switching to alternative URL\"\n            );\n          }\n          try {\n            context.url = getAlternativeURL(url);\n          } catch {}\n          await orig(context, next);\n          return next();\n        };\n      }\n    }\n  } catch {}\n  try {\n    const Factory = ns.Live2DFactory;\n    if (Factory && Array.isArray(Factory.live2DModelMiddlewares)) {\n      const idx = Factory.live2DModelMiddlewares.indexOf(Factory.urlToJSON);\n      if (idx >= 0) {\n        Factory.live2DModelMiddlewares[idx] = async (\n          context: any,\n          next: any\n        ) => {\n          if (typeof context.source === \"string\") {\n            let url = context.source as string;\n            let text: string | null = null;\n            // try original URL\n            try {\n              const r1 = await fetch(url);\n              text = await r1.text();\n            } catch {}\n            // if failed or obviously HTML, try alternative\n            try {\n              if (!text || /^\\s*<!DOCTYPE|<html/i.test(text)) {\n                const alt = getAlternativeURL(url);\n                if (alt && alt !== url) {\n                  const r2 = await fetch(alt);\n                  const t2 = await r2.text();\n                  if (t2) {\n                    text = t2;\n                    url = alt;\n                  }\n                }\n              }\n            } catch {}\n            if (!text) throw new Error(\"Failed to fetch settings JSON\");\n            // parse JSON, fall back to JSON5 if needed\n            let json: any = null;\n            try {\n              json = JSON.parse(text);\n            } catch {\n              try {\n                const JSON5 = await loadJson5IfNeeded();\n                if (JSON5) json = JSON5.parse(text);\n              } catch {}\n            }\n            if (!json) throw new Error(\"Failed to parse settings JSON\");\n            try {\n              json.url = url;\n            } catch {}\n            context.source = json;\n            try {\n              context.live2dModel?.emit?.(\"settingsJSONLoaded\", json);\n            } catch {}\n          }\n          return next();\n        };\n      }\n    }\n  } catch {}\n  __live2d_patches_installed = true;\n}\n\nasync function ensureCubism4(): Promise<void> {\n  // Live2D Cubism Core\n  if (!(window as any).Live2DCubismCore) {\n    await loadScript(\"./vendor/live2dcubismcore.min.js\");\n  }\n  // Always load the C4 plugin at least once and snapshot namespace\n  if (!(window as any).__live2d_api_c4) {\n    await loadScript(\"./vendor/cubism4.min.js\");\n    try {\n      (window as any).__live2d_api_c4 = (PIXI as any).live2d;\n      __loadedRuntime = \"c4\";\n    } catch {}\n  }\n  try {\n    installLive2dPatches(\n      (window as any).__live2d_api_c4 || (PIXI as any).live2d\n    );\n  } catch {}\n}\n\nasync function ensureCubism2(): Promise<void> {\n  // Live2D Cubism 2 runtime\n  if (!(window as any).Live2D) {\n    await loadScript(\"./vendor/live2d.min.js\");\n  }\n  // Always load the C2 plugin at least once and snapshot namespace\n  if (!(window as any).__live2d_api_c2) {\n    await loadScript(\"./vendor/cubism2.min.js\");\n    try {\n      (window as any).__live2d_api_c2 = (PIXI as any).live2d;\n      __loadedRuntime = \"c2\";\n    } catch {}\n  }\n  try {\n    installLive2dPatches(\n      (window as any).__live2d_api_c2 || (PIXI as any).live2d\n    );\n  } catch {}\n}\n\nfunction detectUseV4FromUrl(u: string | null): boolean | null {\n  try {\n    if (!u) return null;\n    const low = u.toLowerCase();\n    if (/(^|\\/)model3\\.json(\\?|$)/.test(low)) return true;\n    if (/(^|\\/)model\\.json(\\?|$)/.test(low)) return false;\n  } catch {}\n  return null;\n}\n\n// Strict runtime detection by file extension\nfunction detectRuntimeByUrl(u: string | null): boolean | null {\n  try {\n    if (!u) return null;\n    const low = u.toLowerCase();\n    if (/\\.model3\\.json(\\?|$)/.test(low) || /\\.moc3(\\?|$)/.test(low))\n      return true; // C4\n    if (/\\.model\\.json(\\?|$)/.test(low) || /\\.moc(\\?|$)/.test(low))\n      return false; // C2\n    if (/\\.json(\\?|$)/.test(low)) return false; // default .json \u2192 C2\n  } catch {}\n  return null;\n}\n\nfunction toAbsoluteAssetUrl(modelJsonUrl: string, assetPath: string) {\n  if (!assetPath) return assetPath;\n  if (/^https?:/i.test(assetPath) || assetPath.startsWith(\"data:\"))\n    return assetPath;\n  try {\n    const base = modelJsonUrl.replace(/\\/[^/]*$/, \"/\");\n    return new URL(assetPath, base).href;\n  } catch {\n    return assetPath;\n  }\n}\n\nfunction rewriteModelJsonUrls(modelJsonUrl: string, j: any) {\n  try {\n    if (j && j.FileReferences) {\n      if (j.FileReferences.Moc)\n        j.FileReferences.Moc = toAbsoluteAssetUrl(\n          modelJsonUrl,\n          j.FileReferences.Moc\n        );\n      if (Array.isArray(j.FileReferences.Textures))\n        j.FileReferences.Textures = j.FileReferences.Textures.map((t: any) =>\n          toAbsoluteAssetUrl(modelJsonUrl, t)\n        );\n      if (j.FileReferences.Physics)\n        j.FileReferences.Physics = toAbsoluteAssetUrl(\n          modelJsonUrl,\n          j.FileReferences.Physics\n        );\n      if (j.FileReferences.Motions) {\n        for (const g of Object.keys(j.FileReferences.Motions)) {\n          const arr = j.FileReferences.Motions[g] || [];\n          for (const m of arr)\n            if (m.File) m.File = toAbsoluteAssetUrl(modelJsonUrl, m.File);\n        }\n      }\n    }\n    if (j) {\n      if (j.model) j.model = toAbsoluteAssetUrl(modelJsonUrl, j.model);\n      if (Array.isArray(j.textures))\n        j.textures = j.textures.map((t: any) =>\n          toAbsoluteAssetUrl(modelJsonUrl, t)\n        );\n      if (j.physics) j.physics = toAbsoluteAssetUrl(modelJsonUrl, j.physics);\n      if (j.motions) {\n        for (const g of Object.keys(j.motions)) {\n          const arr = j.motions[g] || [];\n          for (let i = 0; i < arr.length; i++) {\n            const m = arr[i];\n            if (typeof m === \"string\")\n              arr[i] = { file: toAbsoluteAssetUrl(modelJsonUrl, m) };\n            else {\n              if ((m as any).file)\n                (m as any).file = toAbsoluteAssetUrl(\n                  modelJsonUrl,\n                  (m as any).file\n                );\n              if ((m as any).File)\n                (m as any).File = toAbsoluteAssetUrl(\n                  modelJsonUrl,\n                  (m as any).File\n                );\n            }\n          }\n        }\n      }\n    }\n  } catch {}\n  return j;\n}\n\nfunction jsonToDataUrl(obj: any): string {\n  try {\n    return (\n      \"data:application/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(obj))\n    );\n  } catch {\n    return \"\";\n  }\n}\n\nasync function loadSettingsJson(\n  url: string,\n  forceV4?: boolean | null\n): Promise<{\n  urlOrSettings: any;\n  useV4: boolean | null;\n  originalUrl: string;\n  groups: string[];\n}> {\n  let useV4 = forceV4 ?? detectUseV4FromUrl(url);\n  const byExt = detectRuntimeByUrl(url);\n  try {\n    console.debug(\"[viewer] loadSettingsJson\", { url, forceV4, byExt });\n  } catch {}\n  let groups: string[] = [];\n  try {\n    const r = await fetch(url, { headers: { Accept: \"application/json\" } });\n    const txt = await r.text();\n    const j = JSON.parse(txt);\n    const cloned = JSON.parse(JSON.stringify(j));\n    rewriteModelJsonUrls(url, cloned);\n    // Decide runtime from JSON content\n    let isC4 = false;\n    try {\n      groups = Object.keys(\n        j.motions || j.Motions || j.FileReferences?.Motions || {}\n      );\n    } catch {}\n    if (j?.FileReferences?.Moc && /\\.moc3$/i.test(String(j.FileReferences.Moc)))\n      isC4 = true;\n    if (j?.FileReferences?.Moc && /\\.moc$/i.test(String(j.FileReferences.Moc)))\n      isC4 = false;\n    if ((j.model || j.textures || j.motions) && !j.FileReferences) isC4 = false;\n    // If forced or extension gives a clear answer, prefer it\n    if (forceV4 === true) isC4 = true;\n    if (forceV4 === false) isC4 = false;\n    if (forceV4 == null) {\n      if (byExt === true) isC4 = true;\n      if (byExt === false) isC4 = false;\n    }\n    // For Cubism4 pass settings object with absolute paths and base url\n    if (isC4) {\n      useV4 = true;\n      try {\n        (cloned as any).url = url;\n      } catch {}\n      try {\n        console.debug(\"[viewer] decided Cubism4 for\", url);\n      } catch {}\n      return { urlOrSettings: cloned, useV4, originalUrl: url, groups };\n    }\n    // For Cubism2 prefer passing the JSON URL string (loader resolves relatives)\n    useV4 = false;\n    try {\n      console.debug(\"[viewer] decided Cubism2 for\", url);\n    } catch {}\n    return { urlOrSettings: url, useV4, originalUrl: url, groups };\n  } catch {\n    return { urlOrSettings: url, useV4, originalUrl: url, groups };\n  }\n}\n\nfunction clearPixiCaches() {\n  try {\n    const tex = (PIXI.utils && (PIXI.utils as any).TextureCache) || {};\n    for (const k of Object.keys(tex)) {\n      try {\n        tex[k]?.destroy?.(true);\n      } catch {}\n      delete tex[k];\n    }\n  } catch {}\n  try {\n    const btex = (PIXI.utils && (PIXI.utils as any).BaseTextureCache) || {};\n    for (const k of Object.keys(btex)) {\n      try {\n        btex[k]?.destroy?.();\n      } catch {}\n      delete btex[k];\n    }\n  } catch {}\n}\n\nasync function loadModel(app: any, url: string, forceV4?: boolean | null) {\n  const stageDiv = document.getElementById(\"stage\") as HTMLElement;\n  // Reset previous model state to avoid runtime bleed-through\n  try {\n    await clearPixiCaches();\n    if ((window as any).__live2d_model) {\n      try {\n        app.stage.removeChild((window as any).__live2d_model);\n        (window as any).__live2d_model.destroy?.(true);\n      } catch {}\n    }\n    (window as any).__live2d_model = undefined;\n  } catch {}\n  const { urlOrSettings, useV4, originalUrl, groups } = await loadSettingsJson(\n    url,\n    forceV4\n  );\n  // Persist early via both localStorage and main-process file\n  try {\n    localStorage.setItem(config.LAST_MODEL_KEY, originalUrl);\n  } catch {}\n  try {\n    window.overlayAPI?.saveLastModel?.(originalUrl);\n  } catch {}\n  // If switching between runtimes within the same page, reload so only the needed runtime is attached\n  try {\n    const desired: \"c2\" | \"c4\" | null =\n      useV4 === true ? \"c4\" : useV4 === false ? \"c2\" : null;\n    if (desired && __loadedRuntime && __loadedRuntime !== desired) {\n      (window.location as any).href = `viewer.html`;\n      throw new Error(\"Switching runtime requires reload\");\n    }\n  } catch {}\n  if (useV4 === true) await ensureCubism4();\n  else if (useV4 === false) await ensureCubism2();\n  else await ensureCubism4();\n\n  let model: any = null;\n  const ns = useV4\n    ? (window as any).__live2d_api_c4 || (PIXI as any).live2d\n    : (window as any).__live2d_api_c2 || (PIXI as any).live2d;\n  // Some internals of pixi-live2d-display reference PIXI.live2d directly.\n  // Temporarily point PIXI.live2d to the chosen runtime namespace.\n  const prevLive2d = (PIXI as any).live2d;\n  (PIXI as any).live2d = ns;\n  try {\n    model = await (PIXI as any).live2d.Live2DModel.from(urlOrSettings, {\n      motionPreload: \"none\",\n    });\n  } catch {\n    try {\n      model = await (PIXI as any).live2d.Live2DModel.from(urlOrSettings);\n    } catch {\n      // Cubism2 fallback: fetch settings, rewrite to absolute URLs and load as object\n      if (useV4 === false && typeof urlOrSettings === \"string\") {\n        try {\n          const resp = await fetch(String(urlOrSettings), {\n            headers: { Accept: \"application/json\" },\n          });\n          const txt = await resp.text();\n          const j = JSON.parse(txt);\n          const cloned = JSON.parse(JSON.stringify(j));\n          rewriteModelJsonUrls(String(urlOrSettings), cloned);\n          model = await (PIXI as any).live2d.Live2DModel.from(cloned);\n        } catch {}\n      }\n    }\n  } finally {\n    // Restore previous namespace to avoid surprising other code paths\n    try {\n      (PIXI as any).live2d = prevLive2d;\n    } catch {}\n  }\n  try {\n    (stageDiv as any).dataset.modelUrl = originalUrl;\n  } catch {}\n  try {\n    window.__live2d_model = model;\n  } catch {}\n  try {\n    model.anchor && model.anchor.set(0.5, 0.5);\n  } catch {}\n  app.stage.addChild(model);\n\n  const fitModel = () => {\n    if (!model) return;\n    model.x = app.renderer.width / 2;\n    model.y = app.renderer.height / 2;\n    try {\n      const b = model.getBounds();\n      const scale = Math.min(\n        0.9,\n        (app.renderer.width * 0.9) / Math.max(1, b.width),\n        (app.renderer.height * 0.9) / Math.max(1, b.height)\n      );\n      if (isFinite(scale) && scale > 0) model.scale.set(scale);\n    } catch {}\n  };\n  fitModel();\n  return { model, groups, fitModel };\n}\n\nfunction initBackButton() {\n  const stageDiv = document.getElementById(\"stage\") as HTMLElement;\n  const backBtn = document.getElementById(\"backBtn\");\n  backBtn?.addEventListener(\"click\", () => {\n    try {\n      window.overlayAPI?.exitFullscreen?.();\n    } catch {}\n    const currentModel = (stageDiv as any)?.dataset?.modelUrl || \"\";\n    // Save before navigating to avoid losing the write during unload\n    localStorage.setItem(config.LAST_MODEL_KEY, currentModel);\n    (window.location as any).href = `index.html`;\n  });\n}\n\n(async () => {\n  try {\n    window.overlayAPI?.enterFullscreen?.();\n  } catch {}\n\n  const stageDiv = document.getElementById(\"stage\") as HTMLElement;\n  const treeEl = document.getElementById(\"tree\") as HTMLElement | null;\n  const listEl = document.getElementById(\"list\") as HTMLElement | null;\n  const crumbEl = document.getElementById(\"breadcrumb\") as HTMLElement | null;\n\n  const app = new (PIXI as any).Application({\n    transparent: true,\n    width: 360,\n    height: 420,\n  });\n  stageDiv.appendChild(app.view);\n\n  const onResize = () => {\n    try {\n      const w = stageDiv.clientWidth || 360;\n      const h = stageDiv.clientHeight || 420;\n      app.renderer.resize(w, h);\n    } catch {}\n  };\n  window.addEventListener(\"resize\", onResize);\n  try {\n    const ro = new (window as any).ResizeObserver(() => onResize());\n    (ro as any).observe(stageDiv);\n  } catch {}\n  onResize();\n\n  initBackButton();\n\n  // --- Catalog (index) logic ---\n  const INDEX_URL =\n    \"https://guansss.github.io/live2d-viewer-web/eikanyalive2d-model.json\";\n  const pathMap: Record<string, any> = {};\n  let currentPath = \"\";\n  type RepoKey = \"eikanya\" | \"st\";\n  const REPOS: Record<\n    RepoKey,\n    { type: \"index\"; owner: string; repo: string; ref: string }\n  > = {\n    eikanya: {\n      type: \"index\",\n      owner: \"Eikanya\",\n      repo: \"Live2d-model\",\n      ref: \"master\",\n    },\n    st: {\n      type: \"index\",\n      owner: \"test157t\",\n      repo: \"Live2dModels-ST-\",\n      ref: \"main\",\n    },\n  };\n  let currentRepo: RepoKey = ((): RepoKey => {\n    try {\n      const v = localStorage.getItem(\"viewer_repo\") as RepoKey | null;\n      return v === \"st\" || v === \"eikanya\" ? v : \"eikanya\";\n    } catch {\n      return \"eikanya\";\n    }\n  })();\n  function activeRepo() {\n    return REPOS[currentRepo];\n  }\n\n  function el<K extends keyof HTMLElementTagNameMap>(\n    tag: K,\n    props: any = {},\n    children: (Node | string)[] = []\n  ) {\n    const n = document.createElement(tag);\n    Object.assign(n, props);\n    for (const c of children)\n      n.appendChild(typeof c === \"string\" ? document.createTextNode(c) : c);\n    return n as HTMLElementTagNameMap[K];\n  }\n\n  function pathToJsDelivr(repoPath: string, ref?: string) {\n    const enc = repoPath.split(\"/\").map(encodeURIComponent).join(\"/\");\n    const repo = activeRepo();\n    const suffix = \"@\" + (ref || repo.ref || \"master\");\n    return `https://cdn.jsdelivr.net/gh/${repo.owner}/${repo.repo}${suffix}/${enc}`;\n  }\n  function pathToRaw(repoPath: string, ref?: string) {\n    const enc = repoPath.split(\"/\").map(encodeURIComponent).join(\"/\");\n    const repo = activeRepo();\n    const branch = ref || repo.ref || \"master\";\n    return `https://raw.githubusercontent.com/${repo.owner}/${repo.repo}/${branch}/${enc}`;\n  }\n  async function resolveModelUrl(repoPath: string) {\n    const tries = [\n      pathToRaw(repoPath, activeRepo().ref),\n      pathToJsDelivr(repoPath, activeRepo().ref),\n    ];\n    for (const u of tries) {\n      try {\n        const r = await fetch(u, { method: \"HEAD\" });\n        if (r.ok) return u;\n      } catch {}\n    }\n    return pathToRaw(repoPath, activeRepo().ref);\n  }\n\n  function renderBreadcrumb(path: string) {\n    if (!crumbEl) return;\n    const parts = (path || \"\").split(\"/\").filter(Boolean);\n    const frag = document.createDocumentFragment();\n    const rootA = el(\"a\", {\n      href: \"#\",\n      onclick: (e: MouseEvent) => {\n        e.preventDefault();\n        openPath(\"\");\n      },\n      textContent: \"root\",\n    });\n    frag.appendChild(rootA);\n    let acc = \"\";\n    for (const part of parts) {\n      frag.appendChild(el(\"span\", { textContent: \" / \" }));\n      acc = acc ? acc + \"/\" + part : part;\n      frag.appendChild(\n        el(\"a\", {\n          href: \"#\",\n          onclick: (e: MouseEvent) => {\n            e.preventDefault();\n            openPath(acc);\n          },\n          textContent: part,\n        })\n      );\n    }\n    crumbEl.innerHTML = \"\";\n    crumbEl.appendChild(frag);\n  }\n\n  function renderTree(path: string) {\n    if (!treeEl) return;\n    const node = pathMap[path || \"\"];\n    const dirs = (node && node.children) || [];\n    const cont = el(\"div\");\n    const parent = (path || \"\").replace(/\\/?[^/]*$/, \"\");\n    cont.appendChild(\n      el(\"div\", {\n        textContent: \"..\",\n        onclick: async () => {\n          await ensureNodeLoaded(parent);\n          openPath(parent);\n        },\n        style: \"padding:4px 6px; cursor:pointer; border-radius:4px;\",\n      })\n    );\n    for (const d of dirs) {\n      cont.appendChild(\n        el(\"div\", {\n          textContent: d.name,\n          onclick: async () => {\n            const p = (path ? path + \"/\" : \"\") + d.name;\n            await ensureNodeLoaded(p);\n            openPath(p);\n          },\n          style: \"padding:4px 6px; cursor:pointer; border-radius:4px;\",\n        })\n      );\n    }\n    treeEl.innerHTML = \"\";\n    treeEl.appendChild(cont);\n  }\n\n  function findThumbnailFileForPath(path: string): string | null {\n    try {\n      const node = pathMap[path || \"\"];\n      const files: string[] = (node && node.files) || [];\n      for (const f of files) {\n        if (\n          /\\.(png|jpe?g|webp)$/i.test(f) &&\n          /(thumbnail|thumb|preview)/i.test(f)\n        ) {\n          return f;\n        }\n      }\n      // also try one level deeper (any child folder) for previews\n      const children = (node && node.children) || [];\n      for (const ch of children) {\n        const childPath = (path ? path + \"/\" : \"\") + ch.name;\n        const childNode = pathMap[childPath] || {};\n        const childFiles: string[] =\n          (childNode && (childNode as any).files) || [];\n        for (const f of childFiles) {\n          if (\n            /\\.(png|jpe?g|webp)$/i.test(f) &&\n            /(thumbnail|thumb|preview)/i.test(f)\n          ) {\n            return ch.name + \"/\" + f;\n          }\n        }\n      }\n    } catch {}\n    return null;\n  }\n  function buildImageUrl(repoPathWithFile: string): string {\n    // Prefer CDN; on error, we'll swap to raw in onerror handler\n    return pathToJsDelivr(repoPathWithFile, activeRepo().ref);\n  }\n\n  function listEntries(path: string) {\n    if (!listEl) return;\n    const node = pathMap[path || \"\"];\n    const dirs = (node && node.children) || [];\n    const files = (node && node.files) || [];\n    const items = [\n      ...dirs.map((d: any) => ({\n        type: \"dir\",\n        name: d.name,\n        path: (path ? path + \"/\" : \"\") + d.name,\n      })),\n      ...files.map((f: any) => ({\n        type: \"file\",\n        name: f,\n        path: (path ? path + \"/\" : \"\") + f,\n      })),\n    ].sort((a: any, b: any) =>\n      a.type === b.type\n        ? a.name.localeCompare(b.name)\n        : a.type === \"dir\"\n        ? -1\n        : 1\n    );\n    listEl.innerHTML = \"\";\n    for (const it of items) {\n      const div = el(\"div\", {\n        className: \"card\",\n        style: \"position:relative;\",\n      });\n      let usedOverlay = false;\n      // Thumbnail for directories (only for ST repo where previews exist)\n      if (currentRepo === \"st\" && it.type === \"dir\") {\n        const thumb = findThumbnailFileForPath(it.path);\n        if (thumb) {\n          const repoFile = (it.path ? it.path + \"/\" : \"\") + thumb;\n          const img = el(\"img\", {\n            src: buildImageUrl(repoFile),\n            style:\n              \"width:100%;height:180px;display:block;object-fit:cover;background:#0e0e0e;\",\n            onerror: function (this: HTMLImageElement) {\n              (this as any).onerror = null;\n              this.src = pathToRaw(repoFile, activeRepo().ref);\n            },\n          } as any) as HTMLImageElement;\n          div.appendChild(img);\n          const overlay = el(\n            \"div\",\n            {\n              style:\n                \"position:absolute;left:6px;bottom:6px;background:rgba(0,0,0,.65);color:#fff;padding:4px 6px;border-radius:4px;\",\n            },\n            [\n              el(\"div\", {\n                textContent: it.name,\n                style: \"font-weight:600;font-size:13px;\",\n              }),\n              el(\"div\", {\n                textContent: \"\u041F\u0430\u043F\u043A\u0430\",\n                style: \"opacity:.8;font-size:11px;\",\n              }),\n            ]\n          );\n          div.appendChild(overlay);\n          usedOverlay = true;\n        }\n      }\n      if (!usedOverlay) {\n        div.appendChild(\n          el(\"div\", { textContent: it.name, style: \"font-weight:600\" })\n        );\n        div.appendChild(\n          el(\"div\", {\n            textContent: it.type === \"dir\" ? \"\u041F\u0430\u043F\u043A\u0430\" : \"\u0424\u0430\u0439\u043B\",\n            style: \"opacity:.6; font-size:12px\",\n          })\n        );\n      }\n      (div as any).onclick = async () =>\n        it.type === \"dir\"\n          ? (await ensureNodeLoaded(it.path), openPath(it.path))\n          : selectFile(it.path);\n      listEl.appendChild(div);\n    }\n  }\n\n  async function buildCubism2Json(\n    repoMocPath: string,\n    infoMap: Record<string, any>\n  ) {\n    const key =\n      (pathMap[\"\"]?.name || \"Eikanya/Live2d-model\") + \"/\" + repoMocPath;\n    const meta = infoMap[key] || {};\n    const dir = repoMocPath.replace(/\\/?[^/]*$/, \"\");\n    const modelUrl = await resolveModelUrl(repoMocPath);\n    // Derive textures\n    let textures: string[] = [];\n    if (Array.isArray(meta.textures) && meta.textures.length) {\n      textures = meta.textures.slice();\n    } else {\n      try {\n        const node = pathMap[dir] || { files: [] };\n        const files: string[] = (node && node.files) || [];\n        const pngs = files.filter((f: string) => /\\.(png)$/i.test(f));\n        const preferred = pngs\n          .filter((f) => /texture_\\d+\\.png$/i.test(f))\n          .sort((a, b) => a.localeCompare(b, undefined, { numeric: true }));\n        textures = preferred.length ? preferred : pngs;\n      } catch {}\n      if (!textures.length) textures = [\"texture_00.png\"];\n    }\n    // Motions (best effort)\n    const motionsObj: any = {};\n    if (meta.motions)\n      for (const g of Object.keys(meta.motions))\n        motionsObj[g] = (meta.motions[g] || []).map((f: string) => ({\n          file: f,\n        }));\n    // Physics\n    let physicsRel: string | undefined = meta.physics;\n    if (!physicsRel) {\n      try {\n        const node = pathMap[dir] || { files: [] };\n        const files: string[] = (node && node.files) || [];\n        const phys = files.find((f: string) => /physics\\.json$/i.test(f));\n        if (phys) physicsRel = phys;\n      } catch {}\n    }\n    const absTextures: string[] = [];\n    for (const t of textures)\n      absTextures.push(await resolveModelUrl((dir ? dir + \"/\" : \"\") + t));\n    const absPhysics = physicsRel\n      ? await resolveModelUrl((dir ? dir + \"/\" : \"\") + physicsRel)\n      : undefined;\n    const json: any = { model: modelUrl, textures: absTextures };\n    if (absPhysics) json.physics = absPhysics;\n    if (Object.keys(motionsObj).length) json.motions = motionsObj;\n    return (\n      \"data:application/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(json))\n    );\n  }\n\n  function urlToRepoPath(u: string) {\n    try {\n      const d = decodeURI(u);\n      let m = d.match(\n        /cdn\\.jsdelivr\\.net\\/gh\\/Eikanya\\/Live2d-model@[^/]+\\/(.+)$/\n      );\n      if (m) return m[1];\n      m = d.match(\n        /raw\\.githubusercontent\\.com\\/Eikanya\\/Live2d-model\\/[^/]+\\/(.+)$/\n      );\n      if (m) return m[1];\n      m = d.match(\n        /cdn\\.jsdelivr\\.net\\/gh\\/test157t\\/Live2dModels-ST-@[^/]+\\/(.+)$/\n      );\n      if (m) return m[1];\n      m = d.match(\n        /raw\\.githubusercontent\\.com\\/test157t\\/Live2dModels-ST-\\/[^/]+\\/(.+)$/\n      );\n      if (m) return m[1];\n    } catch {}\n    return null;\n  }\n  function candidatesFromUrl(u: string) {\n    const repoPath = urlToRepoPath(u);\n    if (!repoPath) return [u];\n    return [\n      pathToRaw(repoPath, activeRepo().ref),\n      pathToJsDelivr(repoPath, activeRepo().ref),\n    ];\n  }\n  async function selectFile(repoPath: string) {\n    // Persist a best-effort URL immediately so abrupt exits (Ctrl+C) keep state\n    try {\n      const fallbackUrl = pathToRaw(repoPath, activeRepo().ref);\n      localStorage.setItem(config.LAST_MODEL_KEY, fallbackUrl);\n    } catch {}\n    if (/\\.(moc3|moc)$/i.test(repoPath)) {\n      const dir = repoPath.replace(/\\/?[^/]*$/, \"\");\n      const node = pathMap[dir] || { files: [] };\n      const files = node.files || [];\n      if (/\\.moc3$/i.test(repoPath)) {\n        const j = files.find((n: string) => /\\.model3\\.json$/i.test(n));\n        if (j) {\n          await loadFile((dir ? dir + \"/\" : \"\") + j);\n          return;\n        }\n      } else {\n        const j =\n          files.find((n: string) => /model\\.json$/i.test(n)) ||\n          files.find((n: string) => /model.*\\.json$/i.test(n)) ||\n          files.find((n: string) => /\\.json$/i.test(n));\n        if (j) {\n          await loadFile((dir ? dir + \"/\" : \"\") + j);\n          return;\n        }\n      }\n      // synthesize\n      // infoMap is only available after index fetch; pass empty here if not\n      const dataUrl = await buildCubism2Json(repoPath, {} as any);\n      await sharedLoadModel(app, dataUrl);\n      return;\n    }\n    await loadFile(repoPath);\n  }\n\n  async function loadFile(repoPath: string) {\n    const initialUrl = await resolveModelUrl(repoPath);\n    // Save immediately after resolving the concrete URL so quick exits keep state\n    try {\n      localStorage.setItem(config.LAST_MODEL_KEY, initialUrl);\n    } catch {}\n    try {\n      window.overlayAPI?.saveLastModel?.(initialUrl);\n    } catch {}\n    const extFlag = detectRuntimeByUrl(initialUrl);\n    let selectedUrl = initialUrl;\n    let isCubism4 = /\\.model3\\.json($|\\?)/i.test(initialUrl);\n    let motionGroups: string[] = [];\n    let rewrittenSettings: any = null;\n    const candidates = candidatesFromUrl(initialUrl);\n    for (const tryUrl of candidates) {\n      try {\n        const r = await fetch(tryUrl, {\n          headers: { Accept: \"application/json\" },\n        });\n        const text = await r.text();\n        const j = JSON.parse(text);\n        selectedUrl = tryUrl as string;\n        try {\n          const cloned = JSON.parse(JSON.stringify(j));\n          rewriteModelJsonUrls(selectedUrl, cloned);\n          if (\n            cloned &&\n            (cloned.model || cloned.textures || cloned.motions) &&\n            !cloned.FileReferences\n          ) {\n            // optional sanitize skipped to keep logic simple\n          }\n          rewrittenSettings = cloned;\n        } catch {}\n        if (\n          j?.FileReferences &&\n          /\\.moc3$/i.test(String(j.FileReferences.Moc || \"\"))\n        )\n          isCubism4 = true;\n        if (\n          j?.FileReferences &&\n          /\\.moc$/i.test(String(j.FileReferences.Moc || \"\"))\n        )\n          isCubism4 = false;\n        if (j && (j.model || j.textures || j.motions) && !j.FileReferences)\n          isCubism4 = false;\n        try {\n          motionGroups = Object.keys(\n            j.motions || j.Motions || j.FileReferences?.Motions || {}\n          );\n        } catch {}\n        break;\n      } catch {\n        continue;\n      }\n    }\n    const tries = [selectedUrl];\n    const isC4Settings = (obj: any) =>\n      !!(\n        obj &&\n        obj.FileReferences &&\n        (obj.FileReferences.Moc || obj.FileReferences.Textures)\n      );\n    const isC2Settings = (obj: any) =>\n      !!(\n        obj &&\n        (obj.model || obj.textures || obj.motions) &&\n        !obj.FileReferences\n      );\n    async function tryWithRuntime(useV4: boolean) {\n      if (useV4) await ensureCubism4();\n      else await ensureCubism2();\n      let last: any = null;\n      const queue: string[] = tries.filter(\n        (u) => typeof u === \"string\"\n      ) as string[];\n      for (const u of queue) {\n        try {\n          await sharedLoadModel(app, u, extFlag);\n          return { ok: true };\n        } catch (e) {\n          last = e;\n        }\n      }\n      // Cubism2 fallback: try to synthesize settings from a sibling .moc if available\n      if (!useV4) {\n        for (const u of queue) {\n          try {\n            const repoPath = urlToRepoPath(u);\n            if (!repoPath) continue;\n            const dir = repoPath.replace(/\\/?[^/]*$/, \"\");\n            const node = pathMap[dir] || { files: [] };\n            const files: string[] = node.files || [];\n            const moc = files.find((n: string) => /\\.moc$/i.test(n));\n            if (!moc) continue;\n            const mocPath = dir ? dir + \"/\" + moc : moc;\n            const dataUrl = await buildCubism2Json(mocPath, {} as any);\n            await sharedLoadModel(app, dataUrl, false);\n            return { ok: true };\n          } catch (e) {\n            last = e;\n          }\n        }\n      }\n      return { ok: false, err: last };\n    }\n    const res = await tryWithRuntime(isCubism4);\n    if ((res as any).ok) return;\n    throw (res as any).err || new Error(\"Failed to load model\");\n  }\n\n  function openPath(path: string) {\n    currentPath = path || \"\";\n    renderBreadcrumb(currentPath);\n    renderTree(currentPath);\n    listEntries(currentPath);\n  }\n\n  // Repo selector UI\n  try {\n    const toolbar = document.getElementById(\"toolbar\");\n    if (toolbar) {\n      const repoSel = el(\"select\", { style: \"margin-right:8px;\" });\n      repoSel.appendChild(\n        el(\"option\", { value: \"eikanya\", textContent: \"Eikanya (indexed)\" })\n      );\n      repoSel.appendChild(\n        el(\"option\", { value: \"st\", textContent: \"Live2dModels-ST- (indexed)\" })\n      );\n      (repoSel as HTMLSelectElement).value = currentRepo;\n      (repoSel as HTMLSelectElement).onchange = async () => {\n        try {\n          currentRepo =\n            ((repoSel as HTMLSelectElement).value as RepoKey) || \"eikanya\";\n          localStorage.setItem(\"viewer_repo\", currentRepo);\n          for (const k of Object.keys(pathMap)) delete pathMap[k];\n          await loadRepoRoot();\n          openPath(\"\");\n        } catch {}\n      };\n      toolbar.insertBefore(repoSel, toolbar.firstChild);\n    }\n  } catch {}\n\n  // Index-only mode; no GitHub API calls needed\n  async function ensureNodeLoaded(_path: string) {\n    // no-op; full tree comes from local index\n  }\n  async function loadRepoRoot() {\n    try {\n      // choose bundled local index file by repo\n      const repo = activeRepo();\n      const localIndexName =\n        repo.owner === \"Eikanya\"\n          ? \"eikanyalive2d-model.json\"\n          : \"Live2dModels-ST-.json\";\n      const localUrl = `./index/${localIndexName}`;\n      let data: any = null;\n      try {\n        const r = await fetch(localUrl, { cache: \"no-cache\" });\n        if (r.ok) data = await r.json();\n      } catch {}\n      if (!data && repo.owner === \"Eikanya\") {\n        const resp = await fetch(INDEX_URL);\n        data = await resp.json();\n      }\n      if (data) {\n        const root = data.models || data;\n        (function build(node: any, p: string) {\n          const path = p || \"\";\n          pathMap[path] = node;\n          for (const ch of (node && node.children) || [])\n            build(ch, (path ? path + \"/\" : \"\") + ch.name);\n        })(root, \"\");\n      }\n    } catch {}\n  }\n\n  await loadRepoRoot();\n  openPath(\"\");\n\n  // Prefer localStorage value, then main-process file, then URL query\n  const qp = new URLSearchParams(location.search);\n  let modelUrl: string | null = null;\n  try {\n    modelUrl = localStorage.getItem(config.LAST_MODEL_KEY) || null;\n  } catch {}\n  if (!modelUrl) {\n    try {\n      if (\n        window.overlayAPI &&\n        typeof window.overlayAPI.getLastModel === \"function\"\n      ) {\n        modelUrl = (await window.overlayAPI.getLastModel()) || null;\n      }\n    } catch {}\n  }\n  if (!modelUrl) modelUrl = qp.get(\"model\");\n  if (modelUrl) {\n    const byExt = sharedDetectRuntimeByUrl(modelUrl);\n    await sharedLoadModel(app, modelUrl, byExt);\n  }\n})();\n\nexport {};\n"],
  "mappings": "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",
  "names": ["__loadedRuntime", "__live2d_patches_installed", "loadScript", "getAlternativeURL", "loadJson5IfNeeded", "installLive2dPatches", "ensureCubism4", "ensureCubism2", "detectRuntimeByUrl", "toAbsoluteAssetUrl", "rewriteModelJsonUrls", "modelUrl", "detectRuntimeByUrl", "rewriteModelJsonUrls", "ensureCubism4", "ensureCubism2", "repoPath"]
}
